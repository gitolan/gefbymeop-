local Players = game:GetService("Players")
local player = Players.LocalPlayer
local tweenService = game:GetService("TweenService")
local runService = game:GetService("RunService")

local function createStyledButton(parent, text, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0.2, 0)
    button.Position = position
    button.Text = text
    button.TextScaled = true
    button.Font = Enum.Font.SourceSansSemibold
    button.TextColor3 = Color3.new(1, 1, 1)
    button.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
    button.BackgroundTransparency = 0.5

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.25, 0)
    corner.Parent = button

    local blurLayer = Instance.new("Frame")
    blurLayer.Size = UDim2.new(1, 0, 1, 0)
    blurLayer.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
    blurLayer.BackgroundTransparency = 0.8
    blurLayer.ZIndex = button.ZIndex - 1
    blurLayer.Parent = button

    local cornerBlur = Instance.new("UICorner")
    cornerBlur.CornerRadius = UDim.new(0.25, 0)
    cornerBlur.Parent = blurLayer

    button.Parent = parent

    return button
end

local function animateButton(button)
    local goal = {BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)}
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true)
    local tween = tweenService:Create(button, tweenInfo, goal)
    button.MouseButton1Click:Connect(function()
        tween:Play()
    end)
end

local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 150, 0, 160)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundTransparency = 1
frame.Parent = screenGui

local buttonSpacing = 0.25
local teleportButton = createStyledButton(frame, "Teleport / Back (B/FreezeRunner)", UDim2.new(0, 0, 0 * buttonSpacing, 0))
local teleportAndCreateBlockButton = createStyledButton(frame, "Teleport & Create Blocks", UDim2.new(0, 0, 1 * buttonSpacing, 0))
local refreshTeleportButton = createStyledButton(frame, "Refresh Teleport", UDim2.new(0, 0, 2 * buttonSpacing, 0))
local createEspButton = createStyledButton(frame, "Create Esp", UDim2.new(0, 0, 3 * buttonSpacing, 0))

animateButton(teleportButton)
animateButton(teleportAndCreateBlockButton)
animateButton(refreshTeleportButton)
animateButton(createEspButton)

local initialPosition
local isTeleported = false
local lastTeleportedPlayer
local createdBlocks = 0
local maxBlocks = 2
local blockInstances = {}

local debounce = false
local heartbeatConnections = {}
local EspConnections = {}

local function teleportToPlayer(targetPlayer)
    initialPosition = player.Character.PrimaryPart.Position
    player.Character:SetPrimaryPartCFrame(targetPlayer.Character.PrimaryPart.CFrame)
    addHitbox(targetPlayer.Character)
    isTeleported = true
    teleportButton.Text = "Return to Starting Position"
    lastTeleportedPlayer = targetPlayer
end

local function findNextPlayer()
    local playerRole = player:FindFirstChild("PlayerRole") and player.PlayerRole.Value or nil
    local eligiblePlayers = {}

    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer ~= lastTeleportedPlayer and otherPlayer:FindFirstChild("PlayerRole") then
            local otherPlayerRole = otherPlayer.PlayerRole.Value
            if otherPlayerRole ~= "Dead" and ((playerRole == "Runner" and otherPlayerRole == "Frozen") or 
               (otherPlayerRole == "Crown" or otherPlayerRole == "Runner" or otherPlayerRole == "Survivor" or otherPlayerRole == "Juggernaut" or otherPlayerRole == "B/FreezeRunner" or otherPlayerRole == "B/Crown" or otherPlayerRole == "Alone" or otherPlayerRole == "Frozen") or
               (playerRole == "RedTeam" and otherPlayerRole == "BlueTeam") or (playerRole == "BlueTeam" and otherPlayerRole == "RedTeam")) then
                table.insert(eligiblePlayers, otherPlayer)
            end
        end
    end

if #eligiblePlayers > 0 then
        local randomIndex = math.random(1, #eligiblePlayers)
        return eligiblePlayers[randomIndex]
    else
        -- Fallback: Teleport to a random player except those with the same role or "Dead"
        local fallbackPlayers = {}
        for _, otherPlayer in ipairs(Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer:FindFirstChild("PlayerRole") then
                local otherPlayerRole = otherPlayer.PlayerRole.Value
                if otherPlayerRole ~= "Dead" and otherPlayerRole ~= playerRole then
                    table.insert(fallbackPlayers, otherPlayer)
                end
            end
        end
        if #fallbackPlayers > 0 then
            local randomIndex = math.random(1, #fallbackPlayers)
            return fallbackPlayers[randomIndex]
        end
    end

    return nil
end

local function toggleTeleport()
    if debounce then return end
    debounce = true

    if isTeleported then
        if initialPosition then
            player.Character:SetPrimaryPartCFrame(CFrame.new(initialPosition))
            isTeleported = false
            teleportButton.Text = "Teleport / Back (B/FreezeRunner)"
        end
    else
        local targetPlayer = findNextPlayer()
        if targetPlayer then
            teleportToPlayer(targetPlayer)
        else
            print("No eligible players to teleport to.")
            teleportButton.Text = "No eligible players"
            wait(2)  -- Delay to show message
            teleportButton.Text = "Teleport / Back (B/FreezeRunner)"
        end
    end

    debounce = false
end

    initialPosition = player.Character.PrimaryPart.Position
    player.Character:SetPrimaryPartCFrame(CFrame.new(0, 400, 0))
    isTeleported = true
    teleportButton.Text = "Return to Starting Position"

    local block = Instance.new("Part")
    block.Size = Vector3.new(200, 3, 200)
    block.Position = Vector3.new(0, 397, 0)
    block.Anchored = true
    block.Material = Enum.Material.Plastic
    block.Color = Color3.new(1, 1, 1)
    block.Transparency = 0.9
    block.Parent = workspace

    table.insert(blockInstances, block)
    createdBlocks = createdBlocks + 1

    debounce = false
end

local function refreshTeleport()
    if debounce then return end
    debounce = true

    if isTeleported then
        local targetPlayer = findNextPlayer()
        if targetPlayer then
            teleportToPlayer(targetPlayer)
        end
    end

    debounce = false
end


    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 270, 0, 50)
    notification.Position = UDim2.new(0.5, -150, 0.1, 0)
    notification.Text = "Esp Created!"
    notification.TextScaled = true
    notification.BackgroundTransparency = 0.5
    notification.BackgroundColor3 = Color3.new(0, 0, 0)
    notification.TextColor3 = Color3.new(1, 1, 1)
    notification.Parent = screenGui

    game:GetService("Debris"):AddItem(notification, 2) -- Menghapus notifikasi setelah 2 detik

    debounce = false
end

-- Auto-update Esps every 10 seconds
local elapsed = 0
runService.Heartbeat:Connect(function(deltaTime)
    elapsed = elapsed + deltaTime
    if elapsed >= 10 then
        createEspForPlayers()
        elapsed = 0
    end
end)

teleportButton.MouseButton1Click:Connect(toggleTeleport)
teleportAndCreateBlockButton.MouseButton1Click:Connect(teleportAndCreateBlock)
refreshTeleportButton.MouseButton1Click:Connect(refreshTeleport)
createEspButton.MouseButton1Click:Connect(createEspForPlayers)

-- Function to maintain debouncing for teleport and create block button
local function resetDebounceAfterDelay()
    wait(0.5)
    debounce = false
end

-- Adjust teleport and create block function to handle debounce correctly
local function teleportAndCreateBlock()
    if debounce then return end
    debounce = true

    if createdBlocks >= maxBlocks then
        -- Remove the oldest block
        if #blockInstances > 0 then
            local oldestBlock = table.remove(blockInstances, 1)
            oldestBlock:Destroy()
            createdBlocks = createdBlocks - 1
        end
    end

    initialPosition = player.Character.PrimaryPart.Position
    player.Character:SetPrimaryPartCFrame(CFrame.new(0, 400, 0))
    isTeleported = true
    teleportButton.Text = "Return to Starting Position"

    local block = Instance.new("Part")
    block.Size = Vector3.new(200, 3, 200)
    block.Position = Vector3.new(0, 397, 0)
    block.Anchored = true
    block.Material = Enum.Material.Plastic
    block.Color = Color3.new(1, 1, 1)
    block.Transparency = 0.9
    block.Parent = workspace

    table.insert(blockInstances, block)
    createdBlocks = createdBlocks + 1

    resetDebounceAfterDelay()
end

teleportAndCreateBlockButton.MouseButton1Click:Connect(teleportAndCreateBlock)